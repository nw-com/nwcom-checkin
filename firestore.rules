rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // 輔助函數
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function getUserRole() {
      return get(/databases/$(database)/documents/users/$(request.auth.token.email.split("@")[0])).data.role;
    }
    
    function isAdmin() {
      return isAuthenticated() && getUserRole() == 'ADMIN';
    }
    
    function isSeniorManager() {
      return isAuthenticated() && getUserRole() == 'SENIOR_MANAGER';
    }
    
    function isManager() {
      return isAuthenticated() && (getUserRole() == 'SENIOR_MANAGER' || getUserRole() == 'JUNIOR_MANAGER');
    }
    
    function isOwner(userId) {
      return isAuthenticated() && request.auth.token.email.split("@")[0] == userId;
    }
    
    // 使用者集合規則
    match /users/{userId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow create: if isAdmin();
      allow update: if isAuthenticated() && (isAdmin() || isOwner(userId));
      allow delete: if isAdmin();
    }
    
    // 社區集合規則
    match /communities/{communityId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isManager();
      allow update: if isAuthenticated() && (isAdmin() || isManager());
      allow delete: if isAdmin();
    }
    
    // 排班集合規則
    match /schedules/{scheduleId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin() || isManager();
      allow update: if isAuthenticated() && (isAdmin() || isManager());
      allow delete: if isAdmin() || isManager();
    }
    
    // 打卡紀錄集合規則
    match /checkinLogs/{logId} {
      allow read: if isAuthenticated() && (isAdmin() || isManager() || isOwner(resource.data.userId));
      allow create: if isAuthenticated() && request.auth.token.email.split("@")[0] == request.resource.data.userId;
      allow update: if false; // 不允許更新打卡紀錄
      allow delete: if isAdmin();
    }
    
    // 請假紀錄集合規則
    match /leaveRecords/{recordId} {
      allow read: if isAuthenticated() && (isAdmin() || isManager() || isOwner(resource.data.userId));
      allow create: if isAuthenticated() && request.auth.token.email.split("@")[0] == request.resource.data.userId;
      allow update: if isAuthenticated() && (isAdmin() || isManager());
      allow delete: if isAdmin();
    }
    
    // 獎懲紀錄集合規則
    match /rewardRecords/{recordId} {
      allow read: if isAuthenticated() && (isAdmin() || isManager() || isOwner(resource.data.userId));
      allow create: if isAdmin() || isManager();
      allow update: if isAuthenticated() && (isAdmin() || isManager());
      allow delete: if isAdmin();
    }
    
    // 任務集合規則
    match /tasks/{taskId} {
      allow read: if isAuthenticated() && (isAdmin() || isManager() || resource.data.assignee == request.auth.token.email.split("@")[0]);
      allow create: if isAdmin() || isManager();
      allow update: if isAuthenticated() && (isAdmin() || isManager() || resource.data.assignee == request.auth.token.email.split("@")[0]);
      allow delete: if isAdmin() || isManager();
    }
    
    // 登入紀錄集合規則
    match /loginLogs/{logId} {
      allow read: if isAuthenticated() && (isAdmin() || isOwner(resource.data.userId));
      allow create: if isAuthenticated(); // 允許記錄自己的登入活動
      allow update: if false;
      allow delete: if isAdmin();
    }
    
    // 系統設定集合規則
    match /systemSettings/{settingId} {
      allow read: if isAuthenticated();
      allow create: if isAdmin();
      allow update: if isAdmin();
      allow delete: if isAdmin();
    }
  }
}